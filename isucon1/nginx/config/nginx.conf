user  www-data;
worker_processes  auto;

# error_log  /var/log/nginx/error.log warn;
pid        /run/nginx.pid;


worker_rlimit_nofile  65536; # 1workerが開けるファイルディスクリプタの上限
events {
    worker_connections 2048;
    use epoll;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    ## log ##
    log_format ltsv "time:$time_local"
    "\thost:$remote_addr"
    "\tforwardedfor:$http_x_forwarded_for"
    "\treq:$request"
    "\tmethod:$request_method"
    "\turi:$request_uri"
    "\tprotocol:$server_protocol"
    "\tstatus:$status"
    "\tsize:$body_bytes_sent"
    "\treferer:$http_referer"
    "\tua:$http_user_agent"
    "\treqtime:$request_time"
    "\tupaddr:$upstream_addr"
    "\tupstatus:$upstream_status"
    "\tupcache:$upstream_cache_status"
    "\tupptime:$upstream_response_time"
    "\tifmodifiedsince:$http_if_modified_since"
    "\tifnonematch:$http_if_none_match"
    "\tvhost:$host";

    access_log /var/log/nginx/access.log ltsv;
    error_log /var/log/nginx/error.log;
    # access_log off;
    # error_log off;

    sendfile        on;
    tcp_nopush          on;
    tcp_nodelay         on;
    types_hash_max_size 2048; # (1024) ハッシュテーブルのサイズを設定
    server_tokens off; # (on) サーバー情報を送らない

    keepalive_timeout  65;
    keepalive_requests 10000; # (1000) 1つの接続で処理するリクエストの数。この数を処理すると接続がクローズされる

    #gzip  on;

    open_file_cache max=1024 inactive=60s; # (off) オープンしたファイル情報のキャッシュする

    etag off; # (on) for IF_NONE_MATCH

    proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=zone1:1m max_size=1g inactive=1h;
    proxy_temp_path  /var/cache/nginx/tmp;

    ## upstream ##
    upstream app {
		server unix:/tmp/webapp.sock;
        keepalive 32; # バックエンドへの接続を繋ぎっぱなしにできる。接続数が多い場合に有効。リクエスト数の上限ではないのでそこまで大きな値に設定する必要はない
        # server unix:/tmp/webapp.sock;
    }

	server {
		listen 443 ssl http2;

		ssl_certificate /etc/nginx/certificates/tls-cert.pem;
		ssl_certificate_key /etc/nginx/certificates/tls-key.pem;

        root /home/isucon/webapp/public;

        location /assets/ {
            add_header Cache-Control "public, max-age=86400";
        }

        location  /isu {
            add_header Cache-Control "public, max-age=86400";
            index.html;
        }

        location /register {
            add_header Cache-Control "public, max-age=86400";
            index.html;
        }

		location / {
    		## keepalive ##
			proxy_http_version 1.1; # (1.0)
			proxy_set_header Connection "";
			proxy_set_header Host $http_host;
			proxy_pass http://app;
		}
	}
}
